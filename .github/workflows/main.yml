name: Hprofile Actions
on: workflow_dispatch
env: 
  AWS_REGION: us-east-1 
jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Testing workflow
        uses: actions/checkout@v4 
    
      - name: Maven test
        run : mvn test

      - name: Checkstyle
        run: mvn checkstyle:checkstyle
      
        # setting up our java 11
      - name: Set Java 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'
        # setup or sonarcloud server details
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7
      # Run sonar-scanner
      - name: SonarQube Scan
        run: sonar-scanner
          -Dsonar.host.url=${{ secrets.SONAR_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.sources=src/
          -Dsonar.junit.reportsPath=target/surefire-reports/ 
          -Dsonar.jacoco.reportsPath=target/jacoco.exec 
          -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
          -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/
          
  BUILD_AND_PUBLISH:
     needs: Testing
     runs-on: ubuntu-latest
     steps:
       - name: actions/checkout@v2
         uses: docker://ghcr.io/kciter/aws-ecr-action:latest
       - name: Update application.properties file
         run: |
           sed -i "s/^jdbc.username.*$/jdbc.username\=${{ secrets.RDS_USER }}/" src/main/resources/application.properties
           sed -i "s/^jdbc.password.*$/jdbc.password\=${{ secrets.RDS_PASS }}/" src/main/resources/application.properties
           sed -i "s/db01/${{ secrets.RDS_ENDPOINT }}/" src/main/resources/application.properties
       - name: Build & Upload image to ECR
         uses: docker://ghcr.io/kciter/aws-ecr-action:latest        
         with:
           access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           account_id: ${{ secrets.AWS_ACCOUNT_ID }}
           registry: ${{ secrets.REGISTRY }}
           repo: githubactions-ecr
           region: ${{ env.AWS_REGION }}
           tags: latest,${{ github.run_number }}
           create_repo: true
           image_scanning_configuration: true
           set_repo_policy: true
           daemon_off: false
           dockerfile: ./Dockerfile
           context: ./